#!/bin/bash
# Copyright (C) 2019 Omar Castro <omar.castro.360@gmail.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

if [[ -z "$COMMAND_FILE" ]]; then
    exit
fi

echo '{"prompt": "Filter wifi", "event format": "{{name_enum}} {{value}}"}'


toLinesJson(){
    sed -e 's/\\/\\\\/g' -e 's/\"/\\"/g' -e 's/.*/"&"/' | paste -sd "," -
}

toStringJson(){
    sed -e 's/\\/\\\\/g' -e 's/\"/\\"/g' -e '$!s/.*/&\\n/' | paste -sd "" -
}

#if [[ "$(nmcli radio wifi)" = 'disabled' ]]; then
#    rofi -e "wifi is off" "${ROFI_ARGS[@]}" -width -20
#    exit 1;
#fi 

COLUMNS="IN-USE,SSID,CHAN,RATE,SIGNAL,SECURITY"


WIFILIST="$(nmcli -f "$COLUMNS" -t device wifi list --rescan no | sort -r -t ':' -k1,1 -k5,5n  | awk -F':' '!x[$2]++' )"
ACTIVEWIFI=$(echo "$WIFILIST" | grep "^\*")
OTHERWIFI=$(echo "$WIFILIST" | grep -v "^\*")
CONTENT=$(echo "${COLUMNS//,/:}"$'\n'"$ACTIVEWIFI"$'\n'"$OTHERWIFI" | cut -d":" -f2- | sed 's/:/\\r:/1' | column -s":" -t | sed 's/\\r\s*/\r/' | sed -r '2s|[-a-zA-Z0-9]+|<b>&</b>|g')


JSON_LINES="$(echo "$CONTENT" |  tail +2 | toLinesJson )"
JSON_MESSAGE="$(echo "$CONTENT" | head -n 1 | toStringJson )"

echo '{"prompt": "Filter wifi", "event format": "{{name_enum}} {{value}}"}'

if [[ -z "$OTHERWIFI" ]]; then 
    printf '{"message": "%s","lines":[%s], "overlay": "Scanning..."}\n' "$JSON_MESSAGE" "$JSON_LINES"
    JSON_LINES="$(nmcli -f "$COLUMNS" -t device wifi list --rescan yes \
      | sort -r -t ':' -k1,1 -k5,5n \
      | awk -F':' '!x[$2]++' \
      | grep -v "^\*" \
      | cut -d":" -f2- \
      | sed 's/:/\\r:/2' \
      | column -s":" -t \
      | sed 's/\\r\s*/\r/' \
      | toLinesJson )"
    printf '{"lines":[%s], "overlay": ""}\n' "$ACTIVEWIFI"$'\n'"$JSON_MESSAGE" "$JSON_LINES"
else
    printf '{"message": "%s","lines":[%s]}\n' "$JSON_MESSAGE" "$JSON_LINES"
fi &


while IFS= read line; do
    PARSED_LINE="$(tr "\r" " " <<< "$line")"
    EVENT="$(cut -d" " -f1,1 <<< "$PARSED_LINE")"
    SSID="$(cut -d" " -f2,2 <<< "$PARSED_LINE")"
    case "$EVENT" in
        "SELECT_ENTRY" )
            echo "CONNECT $SSID" > $COMMAND_FILE
            exit
            ;;
    esac
done



#function execRofi(){
#    RESPONSE=$(rofi -dmenu -mesg "$(echo "$CONTENT" | head -n 1)" "${ROFI_ARGS[@]}" \
#     -markup-rows -eh 2 -lines 5 -width -50 \
#     -p "Filter Wifi" < $FILE)
#    if ! [[ -z "$RESPONSE" ]]; then
#      CHOOSEN_WIFI=$(echo "$RESPONSE" | cut -d$'\r' -f1,1 ) 
#      nmcli device wifi connect "$CHOOSEN_WIFI"
#    fi
#}
#
#execRofi &
#
#     
#if ! [[ -z "$ACTIVEWIFI" ]]; then
#  echo "$CONTENT" | tail +2 | sed -r -e '1s|([^ ]+)|<b>\1</b>|g' -e '1s/\r/\ (active\)\r/' >> "$FILE"
#else
#  echo "$CONTENT" | tail +2 >> "$FILE"
#fi
#
#if [[ -z "$OTHERWIFI" ]]; then
#    
#      nmcli -f "$COLUMNS" -t device wifi list --rescan yes \
#      | grep -v "^\*" \
#      | cut -d":" -f2- \
#      | sed 's/:/\\r:/2' \
#      | column -s":" -t \
#      | sed 's/\\r\s*/\r/' >> "$FILE"
#    
#  fi
#rm -f "$FILE"